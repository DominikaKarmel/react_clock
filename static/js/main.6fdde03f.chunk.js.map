{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","onUpdateTime","useState","clockName","setClockName","Date","toUTCString","slice","currentTime","setCurrentTime","useEffect","timerId","window","setInterval","clearInterval","nameUpdateTimerId","now","toString","className","role","App","state","hasClock","handleContextMenu","event","preventDefault","setState","handleClick","onContextMenu","this","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"oNA2CeA,EApCqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrC,EAAkCC,mBAAiB,WAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBACpC,IAAIG,MAAOC,cAAcC,OAAO,IAAK,IADvC,mBAAOC,EAAP,KAAoBC,EAApB,KAyBA,OArBAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCZ,IACAQ,GAAe,IAAIJ,MAAOC,cAAcC,OAAO,IAAK,MACnD,KAEH,OAAO,WACLK,OAAOE,cAAcH,MAEtB,CAACV,IAEJS,qBAAU,WACR,IAAMK,EAAoBH,OAAOC,aAAY,WAC3CT,EAAa,SAAD,OAAUC,KAAKW,MAAMC,WAAWV,OAAO,OAClD,MAEH,OAAO,WACLK,OAAOE,cAAcC,MAEtB,IAGD,sBAAKG,UAAU,QAAQC,KAAK,eAA5B,UACE,wBAAQD,UAAU,cAAlB,SAAiCf,IAChC,YACD,sBAAMe,UAAU,cAAhB,SAA+BV,QC9BxBY,EAAb,4MACEC,MAAkB,CAChBC,UAAU,GAFd,EAKEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,SAAS,CAAEJ,UAAU,KAP9B,EAUEK,YAAc,WACZ,EAAKD,SAAS,CAAEJ,UAAU,KAX9B,4CAcE,WACE,OACE,sBACEJ,UAAU,MACVC,KAAK,eACLS,cAAeC,KAAKN,kBACpBO,QAASD,KAAKF,YAJhB,UAME,6CACCE,KAAKR,MAAMC,UAAY,cAAC,EAAD,CAAOrB,aAAc,sBAvBrD,GAAyB8B,aCLzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6fdde03f.chunk.js","sourcesContent":["// Clock.tsx\nimport React, { useEffect, useState } from 'react';\n\ninterface ClockProps {\n  onUpdateTime: () => void;\n}\n\nconst Clock: React.FC<ClockProps> = ({ onUpdateTime }) => {\n  const [clockName, setClockName] = useState<string>('Clock-0');\n  const [currentTime, setCurrentTime] = useState<string>(\n    new Date().toUTCString().slice(-12, -4),\n  );\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      onUpdateTime();\n      setCurrentTime(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, [onUpdateTime]);\n\n  useEffect(() => {\n    const nameUpdateTimerId = window.setInterval(() => {\n      setClockName(`Clock-${Date.now().toString().slice(-4)}`);\n    }, 3300);\n\n    return () => {\n      window.clearInterval(nameUpdateTimerId);\n    };\n  }, []);\n\n  return (\n    <div className=\"Clock\" role=\"presentation\">\n      <strong className=\"Clock__name\">{clockName}</strong>\n      {' time is '}\n      <span className=\"Clock__time\">{currentTime}</span>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\ninterface AppState {\n  hasClock: boolean;\n}\n\nexport class App extends Component<{}, AppState> {\n  state: AppState = {\n    hasClock: true,\n  };\n\n  handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        role=\"presentation\"\n        onContextMenu={this.handleContextMenu}\n        onClick={this.handleClick}\n      >\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock onUpdateTime={() => {}} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}